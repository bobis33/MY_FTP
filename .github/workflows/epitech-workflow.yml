name: epitech-workflow
run-name: ${{github.actor}} epitech-workflow
on:
  push:
    branches-ignore:
      - " ga-ignore-"
  pull_request:
    branches-ignore:
      - " ga-ignore-"
jobs:

  check_compilation:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: checkout repository
        uses: actions/checkout@master

      - name: compile repository
        run: make

      - name: check binary
        run: |
          if [ ! -f "myftp" ] || [ ! -x "myftp" ]; then
            echo "Binary not found or not executable"
            exit 1
          fi

      - name: clean repository
        run: make fclean


  check_coding_style:
    needs: check_compilation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - name: checkout repository
        uses: actions/checkout@master

      - name: run coding-style
        run: check.sh ./src /tmp

      - name: display coding-style errors
        run: |
          input=/tmp/coding-style-reports.log
          while IFS= read -r -a line; do
            fields=($(printf "%s" "$line"|cut -d':' --output-delimiter=' ' -f1-))
            echo "::error title=${fields[2]} coding style error,file=${fields[0]},line=${fields[1]}::${fields[3]}"
          done < $input || true

      - name: count coding-style errors
        run: |
          NB_ERROR=$(cat /tmp/coding-style-reports.log | wc -l)
          if [ $NB_ERROR -gt 0 ]; then
            exit 1
          fi

  check_tests:
    needs: [check_compilation, check_coding_style]
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container: epitechcontent/epitest-docker:latest
    steps:
      - name: checkout repository
        uses: actions/checkout@master

      - name: run tests
        run: make tests_run